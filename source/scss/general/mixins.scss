@mixin retina {
  @media (min-resolution: $retina-dpi), (min-resolution: $retina-dppx) {
    @content;
  }
}

@mixin mobile-portrait {
  @media (max-width: $mobile - 1) and (orientation: portrait) {
    @content;
  }
}

@mixin not-mobile-portrait {
  @media (min-width: $mobile), (orientation: landscape) {
    @content;
  }
}

@mixin container {
  margin: 0 auto;
  padding: 0 4rem;
  width: 100%;

  @media (min-width: $stop-scaling) {
    padding: 0 40px;
  }

  @media (max-width: $tablet) and (orientation: portrait) {
    padding: 0 1rem;
  }

  @media (max-width: $mobile) and (orientation: landscape) {
    padding: 0 1rem;
  }
}

@mixin list-reset {
  padding: 0;
  margin: 0;
  list-style: none;
}

@mixin btn-reset {
  padding: 0;
  margin: 0;
  background: none;
  border: none;
  cursor: pointer;
  outline: none;

  &:focus {
    outline: none;
  }
}

@mixin hover {
  &:hover {
    opacity: 0.8;
  }

  &:focus {
    outline: none;
    opacity: 0.7;
  }
}

@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin gpu-screen-animation {
  .screen:not(.screen--hidden) & {
    will-change: transform;
  }
}

@mixin accent-animation($duration, $delay, $rate, $step, $orders...) {
  .accent-line span {
    animation: bounce-in-up #{$rate * $duration} ease #{$delay} both;
  }

  @for $lineNumber from 1 through length($orders) {
    @for $letterNumber from 1 through length(nth($orders, $lineNumber)) {
      .accent-line:nth-child(#{$lineNumber}) span:nth-child(#{$letterNumber}) {
        animation-delay: $delay + $rate * $step * nth(nth($orders, $lineNumber), $letterNumber);
      }
    }
  }
}
