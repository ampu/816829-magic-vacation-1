.rules__list {
  display: grid;
  grid-auto-flow: column;
  grid-template-rows: auto auto;

  @media (max-width: $tablet) and (orientation: portrait) {
    display: grid;
    grid-auto-flow: row;
  }
}

.rules__item {
  &::before {
    .screen.active & {
      animation: bounce-in 0.5s $cubic-bezier-follow-through-after-half both;
    }
  }

  &::after {
    .screen.active & {
      animation: fade-in 0.2s 0.1s both;
    }
  }

  p {
    .screen.active & {
      animation: fade-in-left 0.4s 0.15s both;
    }
  }

  @for $i from 1 through 10 {
    .screen.active &:nth-of-type(#{$i}) {
      &::before {
        animation-delay: #{0.2 * $i}s;
      }

      &::after {
        animation-delay: #{0.1 + 0.2 * $i}s;
      }

      p {
        animation-delay: #{0.15 + 0.2 * $i}s;
      }
    }
  }
}

.rules__link {
  &::before {
    left: auto;
    right: 0;
    opacity: 0;
    transform: translateY(-50%);

    .screen.active & {
      animation: expand-btn-background 0.35s 1.05s both;
    }
  }
}

.rules__link span {
  .screen.active & {
    animation: fade-in 0.2s #{1.05 + 0.2}s both;
  }
}

.rules__title {
  .screen.active & {
    $delay: 0s;
    $rate: 1;
    $step: 0.066s;

    .accent-line span {
      animation: bounce-in-up 0.4s ease $delay both;
    }

    .accent-line:nth-child(1) span:nth-child(1) {
      animation-delay: $delay + $rate * $step * 3;
    }

    .accent-line:nth-child(1) span:nth-child(2) {
      animation-delay: $delay + $rate * $step * 2;
    }

    .accent-line:nth-child(1) span:nth-child(3) {
      animation-delay: $delay + $rate * $step * 1.5;
    }

    .accent-line:nth-child(1) span:nth-child(4) {
      animation-delay: $delay + $rate * $step * 1;
    }

    .accent-line:nth-child(1) span:nth-child(5) {
      animation-delay: $delay + $rate * $step * 2.5;
    }

    .accent-line:nth-child(1) span:nth-child(6) {
      animation-delay: $delay + $rate * $step * 2;
    }

    .accent-line:nth-child(1) span:nth-child(7) {
      animation-delay: $delay + $rate * $step * 1;
    }
  }
}
